name: 'CI: TypeScript & ESLint Check'

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main  # or specify your default branch here

jobs:
  quality:
    name: 'CI: Check quality'
    runs-on: ubuntu-latest
    env:
      CLOUDINARY_URL: ${{ secrets.NEXT_CLOUDINARY_URL }}
      CLOUDINARY_UPLOAD_FOLDER: ${{ secrets.NEXT_CLOUDINARY_UPLOAD_FOLDER }}
      API_BASE_URL: ${{ secrets.NEXT_PUBLIC_API_BASE_URL }}
      NOTION_DATABASE_ADC_ID: ${{ secrets.NEXT_PUBLIC_NOTION_DATABASE_ADC_ID }}
      NOTION_DATABASE_JDI_ID: ${{ secrets.NEXT_PUBLIC_NOTION_DATABASE_JDI_ID }}
      NOTION_DATABASE_LIST_ID: ${{ secrets.NEXT_PUBLIC_NOTION_DATABASE_LIST_ID }}
      NOTION_TOKEN: ${{ secrets.NEXT_PUBLIC_NOTION_TOKEN }}
    steps:
      # Step 1: Checkout the code
      - uses: actions/checkout@v3

       # Set up Node.js 20
      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          cd pmy
          npm install
      # Step 4: TypeScript Check (tsc)
      - name: Run TypeScript
        run: |
          cd pmy
          npm run build
        continue-on-error: true  # Keep the workflow running even if TypeScript fails

      # Step 5: ESLint Check
      - name: Run ESLint
        run: |
          cd pmy
          npm run lint
        continue-on-error: true  # Keep the workflow running even if ESLint fails
